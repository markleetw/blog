{"meta":{"title":"Programmer RPG","subtitle":"Hack Everything!","description":null,"author":"marksylee","url":"http://blog.marksylee.com"},"pages":[{"title":"Categories","date":"2020-05-31T05:49:48.185Z","updated":"2020-05-31T05:49:48.185Z","comments":true,"path":"categories/index.html","permalink":"http://blog.marksylee.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2020-05-31T05:49:48.185Z","updated":"2020-05-31T05:49:48.185Z","comments":true,"path":"tags/index.html","permalink":"http://blog.marksylee.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"《生時間》讀書筆記","slug":"reading-make-time","date":"2020-05-30T16:11:30.000Z","updated":"2020-05-31T05:49:48.161Z","comments":true,"path":"2020/05/31/reading-make-time/","link":"","permalink":"http://blog.marksylee.com/2020/05/31/reading-make-time/","excerpt":"Author: Jake Knapp, John ZeratskyEN Name: Make Time | How to focus on What matters every dayISBN: 978-986-479-780-6Score /5: ⭐️⭐️⭐️ 說到時間管理，我只服姓羅的！","text":"Author: Jake Knapp, John ZeratskyEN Name: Make Time | How to focus on What matters every dayISBN: 978-986-479-780-6Score /5: ⭐️⭐️⭐️ 說到時間管理，我只服姓羅的！ 「時間管理」一向不是我的強項，過去我總是覺得自己的時間不夠、想做的事情又太多，起初不斷嘗試精進工作效率，但工作和其他雜事對我而言依舊像是黑洞無止盡地吞噬著時間和精力，就算工作提前告終、獲得了一點私人時間，人早已是行屍走肉，充其量不過是個會洗碗的魁儡罷了。所以我從 2019 年開始有意識地對自己進行一些實驗，實驗的內容我就不多說，不過部分實驗結果和本書有些重疊，後面我會再說到。 會注意到這本書主要是因為兩位作者：Jake Knapp 和 John Zeratsky，是前 Google Venture 的員工，同時也是 Design Sprint 的設計者之二（作者在書中也不斷提醒大家，甚至到有點煩的程度了…），由於本身在 新創 電商產業擔任產品經理，對於 Design Sprint 並不陌生，在業內也是頗有討論，也就因此興起對此書的興趣。 本書內容非常生活化，也提供了很多可以直接取用的素材和案例，如果對於時間管理一無所知，或是從未試圖做過時間管理的人，倒是一本不錯的入門書；不過老實說，很多時候你無法直接套用他們的招式，原因就在於生活環境差太多，隨便舉個例子，他們的工作方式和工時，跟台灣的差異根本是十萬八千里，有些建議做法不太現實，例如：難以專注？提前下班吧！。而且，算一算他們的每日工時大概只有五六個小時呀… 倒也不能說這本書對我個人沒有價值，它確實提供了些創意和靈感，讓我能夠做一點不同的嘗試，我覺得更重要的是，他幫我把過去已經知道的模糊念頭和想法歸納整理成實際的文字，讓我能夠更具體明確概念，便於將概念應用到其他實踐上。 以下，我就針對書中有提及的建議和我個人的親身實踐，分享我對於「生時間」這件事的作法。 如何進行？ 手錶 ＋ 記憶 ＋ 筆記，紀錄 生活中的關鍵時間點，重點是 方法越簡單越好 包含：起床、出門、運動、通勤、午休、下班、煮飯、家務、… 以週為單位審視自己的紀錄，觀察一天當中最需要進步的 一個時間區塊，別貪心！ 放大該時間區塊中的細節，盤點 期間發生的事情 如有必要，可以詳細的紀錄該時間區塊內的時間花費，前提是 不要造成負擔 假想一個 優化目標，也就是自己希望優化完成後會變什麼樣子 針對執行效率和時間分配 有意識地 進行優化，定期反省，隨時調整進行方式和目標 時間區塊的優化到一段落，可能是目標達成，或是遇到阻礙無法克服，回到 2 再來一輪 （個人認為時間管理就是生活管理，如果只是為管理而管理，把人生搞得很不舒服，完全沒有必要。對我而言，時間管理是要讓自己的時間運用更游刃有餘、減少時間和生活壓力。） 在過程中時時提醒自己… 自己 為什麼 想要時間管理？生出來的時間 打算做什麼？ 有意識 地使用時間，而不要被習慣所支配 換句話說就是，只做自己知道原因、目標的事情 舉例：通勤很無聊，有意識地去進行閱讀或聆聽，不要被滑滑滑的習慣支配，當你打開臉書準備滑的時候，問問自己「你希望從中得到什麼？」 不要讓其他人來告訴你、指使你現在該做什麼 只有當自己的事情在掌控中，我們才有餘力去幫助別人，帶來更大的影響力 不要總是有求必應，高效率、快速反應不該只是實踐在別人的優先項目上 不要成為工具使喚的對象 管好你的手機、電腦和其他通訊設備，遠離 錯失恐懼症（FOMO) 只開啟必要的通知 如果不確定哪些是必要的，全部關掉，當遇到困擾時再逐步打開 不要因為你的意識希望放鬆舒壓、休閒娛樂而感到負面 時間管理是要實踐一輩子，不可能偶爾想到管理一下，這樣是不會有任何效果，而人類不是機器，總是會需要休息、休閒和嗜好，不需要因為這些理由不夠「正當」而感到慚愧。 選擇每日焦點 認清現實吧！事情永遠不會有做完的那天，必須要幫事情 設定優先度 （我個人會以週為單位列出所有待辦事項，並為這些待辦事項設定優先級） 每天挑出三至五件待辦事項來著手進行，並 選擇一件成為每日焦點（別貪心） （老實說，我自己會在工作和生活待辦事項各挑一件成為每日焦點，但這不是個好示範，不過這樣會讓我心裡好過點） 每日焦點是自己預期會 花最多時間心力或最重要的事，不一定是當天非要完成的事 在當天的行事曆上 預留下一段時間 給每日焦點，專心去推進它 其他非每日焦點的待辦事項並非不重要，只是總要取捨，我們不能榨乾自己，試試看： 還是去做，但是做完就收，不要追求完美 推到其他比較有空擋的時間 控制心流 實驗和紀錄 你進入心流的狀況，這部分因人而異，讓進入心流成為可以被掌控的流程 找到某一張播放清單，成為你的心流 BGM 特定時段、舒適的位置、光線和身體狀況 電腦的視窗和介面配置 將工作內容 切割 成細項可被獨立執行的行動 例如：「功能開發」切割成系統設計、程式撰寫、測試（還可以再切得更細） 只在特定時間打開重要通知，把專注力留給每日焦點跟自己身上 例如：透過篩選器自動分類 email，並只有特定發信人或關鍵字出現時才會通知 例如：善用請勿打擾（Do Not Disturb）模式 重新設計你的慣用軟體及服務，並創造分心的障礙 例如：不在工作電腦登入臉書，且專注時手機倒扣在桌上 用手錶取代手機，不要讓「看時間」創造分心的機會 不要帶著手機進入會議室，如果會議低效或沒有實質幫助，提出你的想法或離開會議 不要把 email 當作待辦事項，不要急著回覆或閱讀，每天分配一個固定時間給它 把超過一年的電子郵件刪除，或是歸檔後刪除（如果他很重要的話） 任何想法或同事突然冒出打斷，先簡單筆記下來然後拋到腦後 小心凝視深淵 新聞、PTT、臉書、IG、Twitter、Youtube、Hacker News、Reddit… 它們是精神時光屋 訂閱制影音串流、包月 / 季遊戲、任何你覺得不用就會浪費的東西 因為你很可能是為用而用 照顧自己的身體（老生常談可以跳過） 在乎自己吃進的東西 注意身體對食物的反應 例如：吃什麼會胃食道逆流 善用咖啡因 例如：測試自己幾點喝咖啡效果最好 強迫休息 養成運動的習慣 試著冥想 （這對我來說似乎真的很有效） 重視反省 每天在睡前撥出時間反省，反省內容不論好壞都可以，好的維持，壞的明日改進 這邊的另一項重點是 每天留下與自己對話的時間","categories":[{"name":"Reading","slug":"Reading","permalink":"http://blog.marksylee.com/categories/Reading/"}],"tags":[{"name":"productivity","slug":"productivity","permalink":"http://blog.marksylee.com/tags/productivity/"}],"keywords":[{"name":"Reading","slug":"Reading","permalink":"http://blog.marksylee.com/categories/Reading/"}]},{"title":"MarBot Ch. 1 - Listen To Mother's Words","slug":"marbot-ch1-listen-to-mothers-words","date":"2017-12-09T14:10:45.000Z","updated":"2020-05-31T05:49:48.149Z","comments":true,"path":"2017/12/09/marbot-ch1-listen-to-mothers-words/","link":"","permalink":"http://blog.marksylee.com/2017/12/09/marbot-ch1-listen-to-mothers-words/","excerpt":"你是否有在通訊軟體 LINE 上被長輩騷擾的經驗呢？ 隨著智慧型手機的普及，長輩們使用通訊軟體、社群網站也越來越常見，但是隨之而來的各種假新聞分享、早安圖、午安圖、晚安圖、宵夜圖、感恩圖以及已讀不回躁鬱症，是否讓你深感困擾？ 接下來一系列的文章，你將學會如何自製一套媽寶機器人，讓你能夠輕鬆地開發出強勁的功能，如極速秒讀、智能敷衍回訊、定時問候語（問候圖），促使家庭氛圍和樂，解決以上提到的所有煩惱，更重要的是，不需要花到你一毛錢！（如果有很多個媽媽則另當別論） 媽寶的原名是 MarBot，也就是 Mark’s Bot 的簡寫啦！ 這一章節將介紹如何建立自己的機器人，並讓它成為長輩的應聲蟲。 請注意！因為篇幅有限，此系列無法針對每一項技術做詳盡的說明，僅能介紹開發過程中必備的知識。","text":"你是否有在通訊軟體 LINE 上被長輩騷擾的經驗呢？ 隨著智慧型手機的普及，長輩們使用通訊軟體、社群網站也越來越常見，但是隨之而來的各種假新聞分享、早安圖、午安圖、晚安圖、宵夜圖、感恩圖以及已讀不回躁鬱症，是否讓你深感困擾？ 接下來一系列的文章，你將學會如何自製一套媽寶機器人，讓你能夠輕鬆地開發出強勁的功能，如極速秒讀、智能敷衍回訊、定時問候語（問候圖），促使家庭氛圍和樂，解決以上提到的所有煩惱，更重要的是，不需要花到你一毛錢！（如果有很多個媽媽則另當別論） 媽寶的原名是 MarBot，也就是 Mark’s Bot 的簡寫啦！ 這一章節將介紹如何建立自己的機器人，並讓它成為長輩的應聲蟲。 請注意！因為篇幅有限，此系列無法針對每一項技術做詳盡的說明，僅能介紹開發過程中必備的知識。 先來首 BGM 吧！ 在開始之前，必須要做一些事前準備： 註冊 LINE@ 帳號 建立開發和部署環境 Python Heroku &amp; Git 註冊 LINE＠ 帳號 其實 LINE 機器人的基本概念並不複雜，簡而言之就是使用 LINE@ 帳號所提供的 Message API 來做到自動接受和發送訊息的功能。當 LINE@ 帳號接收到好友傳來的訊息，Message API 便會將訊息傳送至你所設定的網路服務（機器人）位址，而機器人就可以針對訊息的內容，來決定該如何回覆。 LINE@ 就像是粉絲團、公眾號，你能夠透過 LINE@ 帳號與使用者交談、主動發送訊息，以誘騙年長者加好友送貼圖為最常見的應用。而 LINE@ 帳號的申請幾乎可以說是沒有門檻，只要你有 LINE 帳號就行了。 LINE@ 帳號跟一般的 LINE 帳號是完全分開的，但因為 LINE@ 帳號並不需要設定密碼，而是透過 LINE 帳號作為管理員進行登入，所以在此才使用自己的 LINE 帳號來進行申請。 如果你還想知道更多關於 LINE@ 的資訊，請前往 官方網站。 首先進入 LINE@ 註冊頁面 點選 開始使用一般帳號 登入你個人的 LINE 帳號 跟著步驟填入所需的資料 請不用擔心，本文所介紹的 LINE 機器人製作方式是完全免費的（Developer Trial或 免費版 ），當然你可以隨時根據自己的需求更改為付費方案，但是基本上，進階的付費功能主要是提供給商業用戶使用，你可以查看LINE@方案介紹 了解更多詳情。 因為帳號申請的過程全都有中文說明，照理說應不會遇到困難，但若是需要更詳盡的申請教學，可以參閱 LINE 官方部落格的教學文章。 申請完 LINE@ 帳號後，便可以從 官網 點選右上方的 管理後台，使用私人 LINE 帳號登入。 進入 LINE@ 後台管理介面後，可以在下方的 帳號一覽 中，看到剛剛所申請的 LINE@ 帳號，點選該帳號後，就可以開始對它進行設定。 為了取信長輩，必須讓 LINE@ 帳號看起來像是個普通私人帳號，所以請先至「帳號管理 &gt; 基本設定」修改帳號名稱、顯示圖片、狀態等等，讓 LINE@ 帳號看起來像是你的私人帳號。 至此，LINE@ 的設定暫時告一段落。 建立開發和部署環境 Python 本系列介紹的機器人開發，是使用 Python 作為主要開發語言，因本篇的主旨並非 Python 教學，所以我只會快速帶過，不再做詳盡的解說，以介紹步驟為主。 Windows 首先前往 Python 官網 ，根據你目前使用的 OS，選擇 Windows x86 executable installer（32bit） 或 Windows x86-64 executable installer（64bit） 進行下載和安裝。 請特別注意，在安裝時請勾選 Add Python to PATH 這個選項。 進階：可以使用 MIT 的 Python 版本管理工具 SNAFU。 macOS 在 macOS 上，我會建議使用 Homebrew 來安裝 Python，可以方便、快速的安裝、升級、刪除任何你所需要的套件、工具。 官方網站已有詳細的 中文教學，根據教學步驟安裝完之後，請在終端機輸入 brew install python3 進階：可以使用 Python 管理工具 pyenv 或 pipenv。 Linux Linux 的用戶應該不需要我教如何安裝 Python 了（懶）。 環境建置是一個非常枯燥、佔用篇幅且意外狀況很多的部分，所以我不打算教得太深入，以能夠解決大多數狀況為主，所以如果你是 Python 新手，在沒有人指導或是資訊基礎的情況下，不建議直接使用 進階 的工具，很容易因為不熟悉而產生錯誤引起挫敗感。如果在過程中有遇到任何問題，歡迎在下方留言，我會盡力幫忙。 至此，Python 應該已經安裝完成了，為了驗證是否可以使用 Python，請打開 終端機 或命令提示字元，輸入 python3 --version 如果有回覆 Python 3.6.3 恭喜你，可以進行下一步了。 Windows 用戶請注意，安裝任何軟體（包含 Python 和後面會介紹的所有工具），安裝完後都必須要重新開啟命令提示字元，指令才能正常生效喔！ Heroku &amp; GitHeroku 是一套 PaaS 雲端服務平台，讓使用者可以快速部署服務（程式）到雲端上，除了簡單易用之外，更重要的是，它所提供的免費方案完全能夠滿足媽寶機器人的需求。 前往 Heroku 的官網 註冊帳號，註冊方式非常簡單，只需要填寫基本資料就可以了，完全不需要填寫信用卡等財務相關資訊。 送出註冊表格後，應會收到系統發出的認證信，認證後便完成了帳號註冊。 接下來就可以建立一套屬於自己的服務。首先前往 Heroku 登入剛剛所申請的帳號，在首次登入時，因為我們未曾建立過任何服務，所以會看到以下的畫面。 點選 Create New App，並依照提示輸入 App name 和選擇 US 後點選 Create app 送出。 就這麼簡單，我們已經建立好一個空服務了！網頁會自動將你導向簡易的說明頁面，建議你可以快速地閱讀它，我知道你可能會看得一頭霧水，別擔心，繼續跟著後面的步驟做吧！ 接下來要安裝 Heroku Cli，它是一套 Heroku 管理工具，簡單來說是可以讓你可以下指令去命令電腦把服務（機器人）部署上 Heroku、查看服務狀態等等。 根據系統不同而有不同的安裝方式，詳情請參閱 官方說明 。基本上類似於 Python 安裝方式，Ｗindows 在此選擇 32bit 或 64bit 安裝檔下載安裝。而 macOS 則是 建議 使用 Homebrew 來進行安裝，指令如下： brew install heroku/brew/heroku 安裝完 Heroku Cli 之後，便可以登入剛剛申請的帳號，只要在 終端機 或命令提示字元 輸入 heroku login 並根據提示輸入帳號密碼即可。 最後，需要安裝開發者必備的版本控管工具 Git。在此安裝 Git 的目的並非只是為了版本控管，而是 Heroku Cli 在部分操作上需要與 Git 配合，後面會再解說。 安裝的步驟就不再贅述，Windows 一樣前往 頁面 選擇對應的版本來下載安裝(如果看不懂可以先按 Next 到底）；而 macOS 用戶則使用 Homebrew（知道它有多方便了吧！），指令我想你應該也猜得出來了。 brew install git 恭喜你，環境建置終於結束啦！ 正式進入開發 將以下指令內的 your-app-name 改為 Heroku 上的 App name 首先找個風水寶地將我們先前建立的 Heroku 服務下載下來 Windows 12C:\\Users\\mark&gt; D:D:\\&gt; heroku git:clone --app your-app-name macOS / Linux 12~$ cd ~/Documents~/Document$ heroku git:clone --app you-app-name 執行完後，此時你的目錄下會多出一個 your-app-name 的資料夾 在資料夾下建立四個檔案，分別是 runtime.txt requirements.txt Procfile your-app-name.py 此時你的檔案結構應該會 類似 這樣 12345D:\\marbot-demo （或 ~/Documents/marbot-demo） - runtime.txt - requirements.txt - marbot-demo.py - Procfile 編輯 runtime.txt，使其內容如下： 1python-3.6.3 這邊應該不難理解，就是讓 Heroku 知道你的程式是用 Python 3.6.3 版所撰寫，Heroku 會在部署時將 Python 環境準備好。 編輯 requiremenst.txt，使其內容如下： 123Flask==0.12gunicorn==19.6.0line-bot-sdk==1.5.0 這邊是列出機器人所需要的三個套件，前兩個建立 Python 網路服務的基本套件，Flask 是一套輕量級的 WEB 框架，而 gunicorn 則是 Python WSGI HTTP Server，第三項則是 LINE 官方所提供的 Python 開發套件（看不懂沒關係，不影響開發，未來有機會再介紹）。 編輯 Procfile，使其內容如下： 1web gunicorn your-app-name:app 這邊是告訴 Heroku，你建立的網路服務是跑在 gunicorn Server 上，且主程式為 your-app-name。請注意，必須要跟 your-app-name.py 同檔名。 最後，就是我們的主角 your-app-name.py 啦！ 因為篇幅較長，我將簡單的說明寫在註解內，如果看不懂也可以直接跳過閱讀，先讓機器人上線再說。 如果對於這四支檔案還有任何疑惑，請至 這裡 觀看實際範例，或是在下方留言詢問。 部署 Heroku 以及串接 Message API 首先，請回到 LINE@ 後台管理頁面 並點選 LINE@ 帳號，進入「帳號設定 &gt; Message API 設定」。由於你的 LINE@ 帳號尚未開通 Message API，請先按照網頁指示啟用後，點擊進入最下方的 LINE Developers。 進入 LINE Developers，會看到一系列的 Channel Settings 設定。請依照指示填入\b資料，但其中有幾個部分特別重要： Plan 有 Developer Trial 和 Free 可供選擇，它們之間的差異在網頁上已有說明。Developer Trial 可以主動發送訊息給使用者，但最多只能擁有 50 位好友；Free 方案可以有無限多的好友，但無法主動發送訊息給使用者（換句話說：只能回嘴，不能主動問候）。如果僅是自娛娛人，建議使用 Developer Trial 可以享受到比較豐富的功能。 Channel secret 這是機器人是否能 接收並解讀 Message API 資料的關鍵，請將它妥善保存並將它取代 your-app-name.py 內的 LINEBOT_CHANNEL_SECRET。 Channel access token 這是機器人用來 發送、回覆訊息 的密鑰，請按下右方的 ISSUE 申請一組新密鑰，並選擇是否讓它定時過期（過期就必須重新申請），取得後請妥善保存並將它取代 your-app-name.py 內的 LINEBOT_CHANNEL_ACCESS_TOKEN。 Use webhooks 當 LINE@ 收到訊息時，是否將訊息傳送至指定服務（機器人），請修改設定為 Enabled。 Webhook URL 此設定與上一個相關，當 Use webhooks 啟動時，Message API 會將訊息傳送至 Webhook URL，請填入 https://your-app-name.herokuapp.com/callback （切記將 your-app-name 改為你在 Heroku 所設定的 App name） Allow bot to join group chats 媽寶機器人是否可以被加入群組聊天，請依需求自行決定是否要啟動。 Auto-reply messages 和 Greeting messages 兩者皆設定為 Disabled。 QR code 顧名思義就是 LINE@ 的 QR code，掃描後就可以加入好友。 修改完資料後，請先別急著關閉頁面。回到終端機或命令提示字元，將路徑移動至專案路徑下 Windows 12C:\\Users\\mark&gt; D:D:\\&gt; cd your-app-name macOS / Linux 1~$ cd ~/Documents/your-app-name 依序執行以下指令，將機器人部署至 Heroku 123git add .git commit -m &apos;first commit&apos;git push heroku master:master 等待 Heroku 部署完後，回到剛剛的 LINE Developers 頁面，按下 Webhook URL 旁的 Verify。如果機器人有部署成功，應會出現 Success 字樣。 將 LINE@ QR code 分享給他人（也可以自己使用），並開始享受清靜的時光吧！ 真是…真是太棒了… 第一次寫如此長篇的教學，可能有所遺漏，請不吝指教！ 應該沒有人會真的拿這個機器人去唬弄長輩吧…","categories":[{"name":"MarBot","slug":"MarBot","permalink":"http://blog.marksylee.com/categories/MarBot/"}],"tags":[{"name":"python","slug":"python","permalink":"http://blog.marksylee.com/tags/python/"},{"name":"chatbot","slug":"chatbot","permalink":"http://blog.marksylee.com/tags/chatbot/"},{"name":"linebot","slug":"linebot","permalink":"http://blog.marksylee.com/tags/linebot/"},{"name":"heroku","slug":"heroku","permalink":"http://blog.marksylee.com/tags/heroku/"}],"keywords":[{"name":"MarBot","slug":"MarBot","permalink":"http://blog.marksylee.com/categories/MarBot/"}]},{"title":"Shebang：*nix 的使用預設程式執行","slug":"shebang-the-default-command-for-file","date":"2017-10-12T16:36:09.000Z","updated":"2020-05-31T05:49:48.162Z","comments":true,"path":"2017/10/13/shebang-the-default-command-for-file/","link":"","permalink":"http://blog.marksylee.com/2017/10/13/shebang-the-default-command-for-file/","excerpt":"在 Windows 的世界，我們可以針對不同的檔案類型選擇預設的執行程式，例如 CSV 檔可以設定自動使用 Microsoft Office Excel 開啟，一旦設定好，只需要對著檔案連點兩下就會自動打開 Excel 讀取檔案。 在類 Unix 系統裡（或稱 *nix，包含 Linux、macOS 等等）其實也有類似的功能，稱為 Shebang（或稱 Hashbang），不同的是，Shebang 是針對各個檔案來設定，而非特定檔案類型。","text":"在 Windows 的世界，我們可以針對不同的檔案類型選擇預設的執行程式，例如 CSV 檔可以設定自動使用 Microsoft Office Excel 開啟，一旦設定好，只需要對著檔案連點兩下就會自動打開 Excel 讀取檔案。 在 類 Unix 系統 裡（或稱 *nix，包含 Linux、macOS 等等）其實也有類似的功能，稱為 Shebang（或稱 Hashbang），不同的是，Shebang 是針對各個檔案來設定，而非特定檔案類型。 Shebang 通常寫在檔案的第一行，以 #! 為開頭，加上希望用來開啟此檔案的指令（絕對路徑）。 Unix 術語中，井號通常稱為 sharp、hash 或 mesh，驚嘆號則為 bang，Shebang 這個名稱也是由此而來。 舉例來說，假設你在 Python 檔案的第一行加上這樣的 Shebang： 1#!/usr/bin/python 此時在命令行輸入 ./test.py 會等價於 /usr/bin/python test.py。 當然，如果你有特別想要指定的 Python 直譯器或是其他用來開啟檔案的指令，可以將 Shebang 的路徑改成： 用指定的 Python 直譯器執行 1#!/where/is/your/python 用 vi 編輯器開啟 1#!/where/is/your/vi 一般來說，最通用的 Shebang 為（以 python 為例） 1#!/usr/bin/env python Shebang 僅會在直接開啟檔案時作用，有指名開啟程式的情況下是沒有用的，例如 python test.py 或 vi test.py。 為什麼是 /usr/bin/env ？由於每個人的安裝習慣不同、不同平台的慣例也不同，就像有的人喜歡把軟體裝在 C 槽、把影片放在 D 槽，甚至有的人還會根據類型分門別類地放在不同資料夾底下，我們很難保證 Python 會被安裝在某個固定的位置，如果我們在 Shebang 內將路徑寫死，那會變得很沒彈性。 env 是一套環境變數相關工具（絕對位置是 /usr/bin/env），在 CLI 僅輸入 env 時會列出當下所有環境變數，而輸入 env command 時會執行在 PATH 內找到的 第一個 command 。 也就是說，在 Shebang 設定為 #!/usr/bin/env python 的情況下，無論使用者將 Python 安裝在什麼地方，都會預設使用 PATH 內第一個 python 作為執行指令。 但是這樣做真的好嗎？ 確實，這個做法可以很輕易地做到跨平台、使用者，不需要去理會各種 Python 安裝路徑，但是缺點也是顯而易見的：首先，我們無法保證 PATH 內的第一個 python 指令就是該使用者慣用或期望使用的指令，或許他常用的 python 直譯器是在 PATH 內的第二或是第三順位，甚至是根本不在 PATH 內；其次，使用 env python 就無法對 Python 直譯器下參數，不過一般來說，這問題對於 Python 這個語言影響並不大。 其實 Shebang 並非必要的，僅是一個方便的選擇，知道以上的優缺點後，要不要加 Shebang？加什麼 Shebang？就要由開發者自行斟酌囉！","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Linux","slug":"Technique/Linux","permalink":"http://blog.marksylee.com/categories/Technique/Linux/"}],"tags":[{"name":"python","slug":"python","permalink":"http://blog.marksylee.com/tags/python/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Linux","slug":"Technique/Linux","permalink":"http://blog.marksylee.com/categories/Technique/Linux/"}]},{"title":"Structures and Architectures for Optimizing Database (EN)","slug":"structures-n-architectures-for-optimizing-database-en","date":"2017-01-27T16:44:03.000Z","updated":"2020-05-31T05:49:48.170Z","comments":true,"path":"2017/01/28/structures-n-architectures-for-optimizing-database-en/","link":"","permalink":"http://blog.marksylee.com/2017/01/28/structures-n-architectures-for-optimizing-database-en/","excerpt":"Recently, I read the XtraDB part of Percona Server document roughly, in this process, I realized my huge lack of basic database knowledge, so it’s inevitable to spend a lot of time on clarifying many concepts which have been mentioned several times in the doc. In the meanwhile, I found out that there’s so much incorrect and ambiguous information on the internet, for the greater good, it could be great if I organize these all materials and post them on this blog. This article contain a few MySQL only usage, but it’s won’t cut down the readability for the reader who is not familiar with MySQL (perhaps…). Why use English? Due to most of the info I collect are written in English and I don’t have enough time to translate them. But don’t worry, I’ll post a Chinese version someday.","text":"Recently, I read the XtraDB part of Percona Server document roughly, in this process, I realized my huge lack of basic database knowledge, so it’s inevitable to spend a lot of time on clarifying many concepts which have been mentioned several times in the doc. In the meanwhile, I found out that there’s so much incorrect and ambiguous information on the internet, for the greater good, it could be great if I organize these all materials and post them on this blog. This article contain a few MySQL only usage, but it’s won’t cut down the readability for the reader who is not familiar with MySQL (perhaps…). Why use English? Due to most of the info I collect are written in English and I don’t have enough time to translate them. But don’t worry, I’ll post a Chinese version someday. Brief IntroAs data growth, the performance of database server will become worse gradually. When there are only hundreds of rows in a table, we basically don’t need to care about the quality of query statements, but once a query involves hundred of thousand of rows, that could be an issue. To ease this problem, MySQL 5.7 provides the MAX_EXECUTE_TIME feature to avoid your query sucks. (more) But what if we have hundred of millions of data in the server? That won’t be that simple. Fortunately, developers have multiple ways to deal with performance problems. PartitionPartition is the way to split the data of a table into multiple tables by rows or columns, according to different divides, it can be classified into Horizontal Partition and Vertical Partition. Horizontal Partition Vertical Partition(MySQL 5.7 does not support it) Obviously, Partition can reduce the effort of querying the tables with fewer indexes and the amounts of data, but the shortcomings are also evident: Developers need to spend more resources to maintain the data. The capability of execution is the bottleneck because there’s still one server deals with all commands. Almost zero benefit for operations of whole table select, insert, update and delete. Sharding A database shard is a horizontal partition of data in a database.– Wikipedia, “Shard (database architecture)“ Sharding is a type of horizontal partition, the rows in a table will be separated into multiple tables, and the most important is, these tables will be stored on the different servers. So it’s possible that the system needs to get order data of user_A from DB_01 and user_B from DB_02. Some articles say that Sharding is Horizontal Partition and Horizontal Partition is Sharding, but it’s not perfectly true because the Horizontal Partition describes the data in a large table is divided by rows and stored in the multiple relative small tables whether in the same or different server(s). Like the cons of Partition, although Sharding solves the bottleneck of execution capability through multiple machines collaboration, it leads to the data scattered in the different tables of various database servers, so it’s still a pain in the ass to maintain these shards. ReplicationDatabase Replication is a mechanism of automatically copying the data from a database to another one. With database Replication, it’s much easier to have multiple database servers provide service to meet the increasing demands. RolesThere are two roles in the database Replication: Master Server is available to handle both read and write (CRUD) operations, and the data in master will replicate to slave(s). Slave Server can only read the data from its disk. Since the data in Slave Server is synchronized from Master Server, it could cause some serious consistency problems. When the data updated in Master Server and the replication hasn’t performed or is performing, the user may get old data from Slave Server. Topology for Database ReplicationHere come some common relationships for database Replication. Master/Slave(s) Master/Master Others (more)ex. Multi-Source Replication Check this if you’re curious how does MySQL replication work. ClusteringClustering means many database servers (usually named nodes) operating in a group, there are multiple ways to do this. Common ScenarioThe most common scenario is, several nodes access the same centralized shared disk, most of nodes used for reads and only one for write (CRUD) operations. This method provides a better performance of reading data, in additional, once a failure rises in a node, another node will take over the task (this feature is named failover). But it also has obvious Achilles’ heel, limited scalability, first, there’s only one DB node takes charge of CRUD operations; second, the read limitations are particularly evident when an application requires complex joins or contains non-optimized SQL statements. Advanced ClusteringAdvanced clustering techniques rely on real-time memory replication between nodes, keeping the memory image of nodes in the cluster up to date via a real-time messaging system. Every node is available to operate both reading and writing, but it’s limited by the amount of traffic between nodes (usually using the typical network or other high-speed communication mechanisms). When the nodes are added to the cluster, the communication and memory replication overhead increases geometrically. Since the severe scalability limitation, it’s often with a relatively fewer number of nodes. This solution also suffers from the same shared disk limitations of a traditional cluster, given that a growing, single large database has increasingly intensive disk I/O.","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Database","slug":"Technique/Database","permalink":"http://blog.marksylee.com/categories/Technique/Database/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://blog.marksylee.com/tags/mysql/"},{"name":"optimization","slug":"optimization","permalink":"http://blog.marksylee.com/tags/optimization/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Database","slug":"Technique/Database","permalink":"http://blog.marksylee.com/categories/Technique/Database/"}]},{"title":"Java 面試 02 - JVM 的 Stack 和 Heap","slug":"java-interview-02-jvm-stack-heap","date":"2016-09-13T16:08:46.000Z","updated":"2020-05-31T05:49:48.146Z","comments":true,"path":"2016/09/14/java-interview-02-jvm-stack-heap/","link":"","permalink":"http://blog.marksylee.com/2016/09/14/java-interview-02-jvm-stack-heap/","excerpt":"請比較 JVM 記憶體的 Stack 和 Heap這題非常容易考到，而且翻譯十分混亂，盡量用原文去表達比較好，Stack 繁中為堆疊、簡中為棧，Heap 繁中為堆積、簡中為堆。 要特別注意的是，這邊的 Stack 和 Heap 並不是在指資料結構，而是指 JVM 記憶體管理的部分。","text":"請比較 JVM 記憶體的 Stack 和 Heap這題非常容易考到，而且翻譯十分混亂，盡量用原文去表達比較好，Stack 繁中為 堆疊 、簡中為 棧，Heap 繁中為 堆積 、簡中為 堆。 要特別注意的是，這邊的 Stack 和 Heap 並不是在指資料結構，而是指 JVM 記憶體管理 的部分。 聲明： 這些內容比較簡略、粗糙，忽略了很多細節，只揀選能回答到問題的部份去解說，並不是百分之百準確，除非每一題都有兩個小時以上的回答時間，否則這些內容應該足夠回答到面試官想聽的點。如果你真的很在乎每一個部份的細節內容，你不該讀我的筆記，而是去讀文件，自己寫自己的筆記。當然，我會隨著越講越深入而帶入更多細節的部份，但是我也需要考量文章篇幅以及流暢度。 若有任何錯誤或遺漏之處，請在底下用力鞭我，不用客氣，隱瞞缺失比直指痛處更讓人害怕。 首先，Java 檔經過編譯後所產生的 Class 檔 (bytecode)，只能運行在 JVM 上，而 JVM 在運算時，如同一般電腦一樣，需要記憶體儲存運算所需的資料及指令，而 JVM 記憶體中的 Stack 和 Heap 最常被拿來做比較 (記憶體中當然還有其他部份，包括 Method Area、PC Register、Native Method Stack，但不在本篇討論範圍)。 JVM 記憶體的 Stack 和 Heap 絕對不要和其他同名的東西搞混，在這裡是做為 JVM 儲存資料或指令的區域，和其他同名的東西無關，請把它當作平行宇宙看待。 Java 中的資料型態 分為兩種： 1. Primitive Type 基本型態 共有 8 種：int、short、long、byte、float、double、boolean、char。 這種類型是通過如 int a = 3; long b = 123L;的方式宣告。 長度及生命週期都為可知 (程式碼區塊執行完就扔掉)。 運算速度快，但長度與內容受限。 2. Class Type / Reference Type 類別型態 / 參考型態 其他大都屬於此類別，如 Integer、String、Long 以及自行定義的類別 (ex. User) 等。 這種類型通常都需要用 new 去創建，如 User user = new User(&quot;Mark&quot;);。 因為是在執行時才動態創建，所以長度及生命週期都不可預知。 靈活但運算較耗時。 Stack 堆疊、棧 複習一下 前一章 所提到的： 每一個 Thread 擁有自己的 Stack，Stack 是用來儲存函數路徑及區域變數，Thread 之間的 Stack 互相獨立。 Stack 是一種 後進先出 (FILO) 的容器，具有存取速度快和管理簡單的特點。由於 Java 中變數跟函式的生命週期都為 後進先出 ，也就是越晚產生的會越先被回收或銷毀，所以 Stack 非常適合做為這種可預測性的資料，如 區域變數、函式參數與函式返回位址 等等，的儲存容器。 因為 Stack 中的資料生命週期都是 規律 的，所以由系統自行去產生和回收空間即可，程式設計師不需要介入。 Heap 堆積、堆 還記得 前一章 提到 Process 的 Memory Space 是專門儲存共享資料 / 資源 的嗎？Heap 就屬於這種共享資料。 Class Type 在創建 實例 (Instance) 時 (ex. new User(&quot;Mark&quot;);)，就是把資料放置於 Heap 中，系統會在 Heap 內找一塊區域放置此 User 實例的 屬性資料，也因為 Heap 存放的是共享資料，所以不論該實例是由哪一個 Thread 所創建的，同 Process 底下的其他 Thread 也可以進行存取。 因為實例的生命週期是不可預知的，系統較難以自行去回收空間，所幸，Java 的特色之一就是 Garbage Collection 機制 (簡稱 GC)，會自動去清理 Heap 內已經 沒有被參考 (Reference) 的資料，當然，程式設計師可以撰寫程式去控制 GC 的行動，不過大多數情況下都 不建議 如此，過多的介入反而可能造成資源的浪費，未來 可能 會再寫一篇簡述 GC 是如何判斷哪些資料應該被清理。 範例 可能有人看到這邊仍是霧煞煞，以下我用簡單的程式來講解資料儲存實際上是如何運作。 123int a = 123;long b = 456L;User c = new User(\"Mark\", Gender.MALE); 以上程式碼的資料儲存順序大致上可以視為以下流程圖 (在此先不考慮 Constant Pool)。 前兩行指令都是 Primitive Type，會在 Stack 內建立變數 a 和 b，並將實際值 123 和 456L 存放於變數內。 第三行指令要切分成兩個部份，等號右邊及左邊，首先是右邊的部份，先以 name 和 gender 參數創建一個 User 實例，此時會在 Heap 中的一個位址 (ex. 0x1234) 存放實例的屬性資料 (ex. name、gender、address…)，並將實例所在的記憶體位址 (0x1234) 指定給變數 c 參考。 這篇是以變數為例子去比較兩者儲存方式的不同，至於「Stack 如何儲存函式」、「常數池 (Constant Pool) 是什麼」、「實例的 method 存放在哪」等等問題，留待後面文章再做解答。 從以上的例子可以發現，Stack 內的變數值分為兩種類型，一種為 Value Type 實質類別 ，儲存的是 實際的值 (ex. 123、456L)；另一種為 Reference Type 參考類別，儲存的是 資料在 Heap 中的記憶體位址 (ex. 0x1234)。 總結 Stack 和 Heap 是 JVM 記憶體儲存資料或指令的區域。 Java 的資料類型分為兩種：Primitive Type 和 Class Type。 Stack 存取速度快，但資料長度及生命週期必須是預知的，用來儲存區域變數、函式參數與函式返回位址等資料。 Heap 是 Class Type 創建實例時存放資料的地方，在 Heap 創建完成後會回傳所在的記憶體位址。 變數可能是 Primitive Type 或 Class / Reference Type 。若是 Primitive Type，則在 Stack 內的變數值為實際值；若是 Class / Reference Type，實例資料會儲存在 Heap 中，Stack 內的變數值為實例在 Heap 中的記憶體位址。 User user = new User(&quot;Mark&quot;); 的行為簡單來說是： i. 創建並儲存 User 實例 (name = Mark) 於 Heap 中。 ii. 儲存完成後，回傳資料所在的記憶體位址。 iii. 在 Stack 中新增變量 user。 iv. 將 ii. 所傳回的記憶體位址指定給 user 參考。","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Java","slug":"Technique/Java","permalink":"http://blog.marksylee.com/categories/Technique/Java/"}],"tags":[{"name":"interview","slug":"interview","permalink":"http://blog.marksylee.com/tags/interview/"},{"name":"java_interview","slug":"java-interview","permalink":"http://blog.marksylee.com/tags/java-interview/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Java","slug":"Technique/Java","permalink":"http://blog.marksylee.com/categories/Technique/Java/"}]},{"title":"Java 面試 01 - Program、Process 和 Thread","slug":"java-interview-01-program-process-thread","date":"2016-09-13T12:53:37.000Z","updated":"2020-05-31T05:49:48.145Z","comments":true,"path":"2016/09/13/java-interview-01-program-process-thread/","link":"","permalink":"http://blog.marksylee.com/2016/09/13/java-interview-01-program-process-thread/","excerpt":"請簡介 Program、Process 和 Thread 及其差別這一題倒是比較少考到，不過為了後面講解多執行緒 (Multi-Thread) 以及 JVM Stack/Heap 方便，所以還是必須要提一下。","text":"請簡介 Program、Process 和 Thread 及其差別 這一題倒是比較少考到，不過為了後面講解多執行緒 (Multi-Thread) 以及 JVM Stack/Heap 方便，所以還是必須要提一下。 聲明： 這些內容比較簡略、粗糙，忽略了很多細節，只揀選能回答到問題的部份去解說，並不是百分之百準確，除非每一題都有兩個小時以上的回答時間，否則這些內容應該足夠回答到面試官想聽的點。如果你真的很在乎每一個部份的細節內容，你不該讀我的筆記，而是去讀文件，自己寫自己的筆記。當然，我會隨著越講越深入而帶入更多細節的部份，但是我也需要考量文章篇幅以及流暢度。 若有任何錯誤或遺漏之處，請在底下用力鞭我，不用客氣，隱瞞缺失比直指痛處更讓人害怕。 Program 程式 還沒有被執行的程式，或是說可以驅動 / 命令電腦的指令集合，它可能是指令、可讀的程式碼、編譯過的位元碼 (bytecode) 或是機器碼。 Process 程序 當 Program 被執行時，所產生的執行個體，Program 被執行就會產生 Process，所以如果同時執行同一個 Program 十次，就會產生至少十個 Process。要切記一點，一顆 CPU 同時只能做一個運算，多工作業系統 (Multitasking Operating System) 可以同時運行多個 Process 是因為它將 Process 進行排程 (Scheduling)，令 CPU 在各 Process 切換，因為速度很快，所以才會有同時處裡好多個 Process 的錯覺。 Process 粗略包含以下兩個部分 (實際上更複雜，未來再討論)： 1. Memory Space 記憶體空間 所有此 Process 的共享資料、資源放置於此，同一個 Process 底下的所有 Thread 皆可存取，但是不同 Process 的 Memory Space 不同，Process 彼此之間無法存取對方的 Memory Space。 2. Thread 執行緒 Thread 執行緒CPU 實際運算的部分，Thread 包含兩個部分 (實際上更複雜，未來再討論)： 1. Stack 堆疊 儲存從起點開始 (例如main)，到目前為止所有函數呼叫路徑，以及這些呼叫路徑上所用到的區域變數。 2. CPU 狀態 存放 CPU 暫存器 (如 Program Counter, Stack Pointer, Program Status Word…) 等狀態，以便在 CPU 再次回來執行時能知道上次執行狀況。 – 一個 Process 包含一個以上的 Thread，以 Java SE 為例，應用程式從起始的入口 main 開始執行，這就是主執行緒 (Main Thread)，如果程式內沒有創建其他 Thread，則稱為單一執行緒；若是程式內有使用類似以下方式去主動創建 Thread，則稱為多執行緒 (Multithreading)。 123456789101112public class ThreadExample1 extends Thread &#123; @Override public void run() &#123; System.out.println(\"Custom Thread\"); &#125; public static void main(String[] args) &#123; Thread t = new ThreadExample1(); // 創建 Thread t.start(); // 執行 Thread System.out.println(\"Main Thread\"); &#125;&#125; 123456789101112public class ThreadExample2 implements Runnable &#123; @Override public void run() &#123; System.out.println(\"Custom Thread\"); &#125; public static void main(String[] args) &#123; Thread t = new Thread(new ThreadExample2()); // 創建 Thread t.start(); // 執行 Thread System.out.println(\"Main Thread\"); &#125;&#125; 前面說到 CPU 會在 Process 之間做切換，其實 CPU 被分配給 Process 時主要是執行 Thread 運算，當 CPU 要處理的 Process 底下有多個 Thread，CPU 會依照 Thread 優先順序以及 CPU 使用時間去分配，在 Thread 之間做切換，讓每個 Thread 都有被執行到的機會，達到多個 Thread 同時運算的效果。 總結 Program 是還沒被執行的指令或程式集合 Process 是 Program 執行時產生的執行個體 Process 下有 Memory Space 和一個以上的 Thread Memory Space 是同 Process 下所有 Thread 共用，主要用來存放共享的資料及資源 Thread 有自己的 Stack 來儲存函數路徑及區域變數，所以不同 Thread 之間的區域變數是互相獨立的 CPU 會在 Process 之間快速切換來達到多工的目的 CPU 也會根據 Thread 優先權以及 CPU 使用時間，在 Thread 之間切換，讓每個 Thread 都有被執行的機會","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Java","slug":"Technique/Java","permalink":"http://blog.marksylee.com/categories/Technique/Java/"}],"tags":[{"name":"interview","slug":"interview","permalink":"http://blog.marksylee.com/tags/interview/"},{"name":"java_interview","slug":"java-interview","permalink":"http://blog.marksylee.com/tags/java-interview/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Java","slug":"Technique/Java","permalink":"http://blog.marksylee.com/categories/Technique/Java/"}]},{"title":"網路妨礙名譽報案流程","slug":"how-to-sue-for-offenses-against-reputation","date":"2016-08-01T10:16:42.000Z","updated":"2020-05-31T05:49:48.142Z","comments":true,"path":"2016/08/01/how-to-sue-for-offenses-against-reputation/","link":"","permalink":"http://blog.marksylee.com/2016/08/01/how-to-sue-for-offenses-against-reputation/","excerpt":"在網路上與人互動難免會起口角，雖說大多能夠理性溝通，但是仍會有少部份的人很壓抑、很衝動，說出一些讓人不太舒服的話，甚至是人身攻擊，這時候，我們應該懂得保護自己、維護自己的權益。","text":"在網路上與人互動難免會起口角，雖說大多能夠理性溝通，但是仍會有少部份的人很壓抑、很衝動，說出一些讓人不太舒服的話，甚至是人身攻擊，這時候，我們應該懂得保護自己、維護自己的權益。 首先，一定要 保持冷靜，千萬別被激怒，更不可以做出太過的反擊讓對方有機可乘，當對方口出惡言讓你感到受辱時，善意地提醒對方道歉，否則將採取必要措施。切記，不斷提醒自己是文明人，對方病了，我們要用理性的方式治他。 很遺憾的是，善意的提醒通常不會奏效，對方很可能變本加厲地攻擊，甚至不斷譏諷、嘲弄、勸退，這時候我們要保持本心，不要受他的影響，並開始採取以下行動。 有時候對方會聲稱「我又沒有指名道姓，是你自己要對號入座，告不了我的啦！」基本上，告不告得成不是他說了算，只要有符合：在公開場合、亂罵髒話或是讓人覺得受侮辱的話，就算成立。所以不論是否匿名、是否指名道姓，只要有滿足前者條件，就可以提告。不要害怕失敗，就算失敗也不會有所損失，不會因為你告輸了就掛上前科。 1. 留下所有證據，並存到隨身碟 這非常重要！不管是遊戲、網頁文字或是語音對話，用拍照或錄音的方式完整紀錄下來，甚至將所有可以收集到的對方資料也找出來，並照順序歸檔，如果有網址等能夠現場重現的的資料最好也記下來，以下是我當時所截取的圖片及網址。 2. 回想從頭到尾整個過程 事情是怎麼發生的，你做了什麼時候，他做了什麼事情，最好連時間都記下來，把他當作準備報告一樣想透徹，因為你向警察說明得越詳細，筆錄的製作會更加順利。 3. 帶上身份證和證據，前往你上網地所屬的警察局 記住一定要是上網地的警察局，例如你在家上網跟人起糾紛，就前往離你家最近的警察局就對了，因為若是你跑去其他分局，他們還是會把你轉去所屬地的分局。 4. 報案 鼓起勇氣踏入派出所，你不是犯人並不需要害怕，和受理員警表明「我在網路上被人辱罵，我要告他妨礙名譽(妨礙名譽是誹謗罪、公然侮辱和加重誹謗的總稱，所以這樣講是沒有問題的)」，將手中所有證據交給警察，並向員警描述案發經過。 5. 怎麼辦？查不到被告人資料 警察會根據你提供的證據尋找被告人，可能是他網路上留的個人資料，可能是連線的 IP 等等，不過因為現在有通保法，使得警方要查到對方資料好像「稍微」困難一點，但是大部份都只是時間問題，加上有中華民國的先進科技(當時警員說的)，要找出一般人是妥妥的，就算運氣不好，真的一時查不到對方資料，也是能告！告不告得成是由檢察官、法官決定，警方只是受理單位，所以如果警察跟你說無法告或是想勸退，那只是他不想 / 懶得受理。另外，員警可能會問你，除了刑事告訴之外，是否要求民事賠償，請放心地說「是！」，最後確認資料、筆錄並簽名，領取三聯單即完成報案手續。 6. 再來呢？我要不要請律師？我會不會有案底？我…別緊張，這種告訴方式只是其中一種，還有其他很多方法，例如請律師寫狀紙啊等等，這種告訴方式的好處很明顯，你不用花錢請律師，你不用自己查案查資料，檢察官就是你的律師，所以你此時要做的就是等，等跑流程、等檢察官辦理，檢察官會主動跟你告知進度和希望你配合的事項，所以不用擔心太多，你只需要有耐心，因為這不是一兩個禮拜就可以搞定的，少說也要三五個月，但是不用擔心被吃案，別忘了你手上熱騰騰的三聯單。至於會不會贏，沒有人可以保證，就算輸了你也沒有損失(如果硬要說，就是時間吧…)，不過也很有可能在檢察官那一關就會要求雙方和解，這時候你可以開出一個你滿意的和解金，如果對方果斷拒絕不再協商，那就會送進去跑告訴流程了。 7. 如果真的要跑法院呢？如果對方拒絕和解，真的要跑法院，其實也不用太擔心，這種小案子頂多跑個兩三次而已，法院也不會花太多時間處理這種案子，通常一般被告者應該不會讓自己走到這一步，因為這一旦輸了，就會留下案底，妨礙名譽是刑事罪，也就是一旦成立，這個前科會跟著被告人一輩子，雖然說妨礙名譽罰得不重，但是沒有人會想要一輩子背著案底。此時你看到罰得不重是不是有點想打退堂鼓？先別急，還記得報案時員警有問過你是否要求民事賠償？(千萬要說是啊！)民事賠償的部份才是真的賠償給提告者的，至於會賠償多少錢就要看你的呈述和法官的決定，例如描述他的侮辱對你的身心靈影響等等。 以上就是大致的流程，我目前只走到第六步，正在等待檢察官聯絡，所以後面也是參考其他人的文章，如果有更新進度會再更新上來。","categories":[{"name":"Life","slug":"Life","permalink":"http://blog.marksylee.com/categories/Life/"},{"name":"Law","slug":"Life/Law","permalink":"http://blog.marksylee.com/categories/Life/Law/"}],"tags":[{"name":"offenses against reputation","slug":"offenses-against-reputation","permalink":"http://blog.marksylee.com/tags/offenses-against-reputation/"}],"keywords":[{"name":"Life","slug":"Life","permalink":"http://blog.marksylee.com/categories/Life/"},{"name":"Law","slug":"Life/Law","permalink":"http://blog.marksylee.com/categories/Life/Law/"}]},{"title":"Gradle/Ant 合併檔案編碼問題","slug":"gradle-ant-concat-encoding","date":"2016-06-25T03:41:12.000Z","updated":"2020-05-31T05:49:48.141Z","comments":true,"path":"2016/06/25/gradle-ant-concat-encoding/","link":"","permalink":"http://blog.marksylee.com/2016/06/25/gradle-ant-concat-encoding/","excerpt":"使用Ant或Gradle合併多個檔案時，因為檔案內含中文字導致編碼問題。","text":"使用 Ant 或 Gradle 合併多個檔案時，因為檔案內含中文字導致編碼問題。 問題 我有一支合併檔案的 task 如下： 將 data 下的 SQL 檔合併成 output 內的 result.sql1234567891011task concatsql(type: SourceTask) &#123; delete 'output/result.sql' source 'data' include '*.sql' outputs.file new File(\"output\", \"result.sql\") doLast &#123; ant.concat(destfile: outputs.files.singleFile) &#123; source.addToAntBuilder(ant, 'fileset', FileCollection.AntType.FileSet) &#125; &#125;&#125; 因為 SQL 檔內容包含中文字，導致輸出的內容會有亂碼，而這支 Gradle，其實底層是使用 Ant 的 cancat 功能，所以同理，使用 Ant 去跑也會出現一樣的問題。 基礎知識 好像也沒什麼基礎知識，就是 encoding 的問題。 Ant 可以加入 encoding 跟outputencoding屬性，請參考How to encode Java files in UTF-8 using Apache Ant?。 解決方法 首先將原始檔案儲存為 UTF-8 編碼，並在呼叫 ant.concat 時，加入 encoding 和outputencoding設定。 123456789101112task concatsql(type: SourceTask) &#123; delete 'output/result.sql' source 'data' include '*.sql' outputs.file new File(\"output\", \"result.sql\") doLast &#123; ant.concat(destfile: outputs.files.singleFile, encoding:\"UTF-8\", outputencoding: \"UTF-8\") &#123; source.addToAntBuilder(ant, 'fileset', FileCollection.AntType.FileSet) &#125; &#125;&#125;","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Java","slug":"Technique/Java","permalink":"http://blog.marksylee.com/categories/Technique/Java/"}],"tags":[{"name":"gradle","slug":"gradle","permalink":"http://blog.marksylee.com/tags/gradle/"},{"name":"ant","slug":"ant","permalink":"http://blog.marksylee.com/tags/ant/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Java","slug":"Technique/Java","permalink":"http://blog.marksylee.com/categories/Technique/Java/"}]},{"title":"2016 亞太開發人員技術年會‬","slug":"dev-days-asia-2016","date":"2016-06-24T09:51:41.000Z","updated":"2020-05-31T05:49:48.138Z","comments":true,"path":"2016/06/24/dev-days-asia-2016/","link":"","permalink":"http://blog.marksylee.com/2016/06/24/dev-days-asia-2016/","excerpt":"大部分都在展示產品功能(行銷研討會的味道)，會議主要分為兩個部分Office和Microsoft Azure。 活動網址","text":"大部分都在展示產品功能 (行銷研討會的味道)，會議主要分為兩個部分 Office 和 Microsoft Azure。 活動網址 OfficeOffice Add-insOffice Add-ins Dev Doc 支援使用 JavaScript 開發 Office Add-ins，降低開發門檻和提升開發效率，提供 API(但沒有大概介紹有哪些，主要還是要去看 doc) 滿足使用者需求等等，然後 Demo 幾個範例，例如 Word Add-in 可以讓使用者直接用 Word 抓取外部資料和樣板，用拖拉的方式去完成一份文件；或是用 Excel Add-in 把 Excel 做得像是記帳軟體等等。 Office 365 RESTful APIOffice 365 提供 RESTful API 讓開發者可以使用各種語言 / 應用去結合 Office 365，這其中順便幫 Office 365 新的服務 Connector 打廣告，Connector 想要做的是一個訊息集散的應用，可以整合 GitHub、Trello、Twitter 等等，作為企業內部溝通的平台，有一點 Slack 的感覺。 因為 Office 365 提倡的是雲端協同辦公室的概念，一切都交給微軟雲端解決，所以整合就是個很大的賣點，微軟將 Office 365 的所有應用服務 API 整合在單一窗口，稱為 Microsoft Graph，透過 Microsoft Graph 提供的 API 可以對 Office 365 所有應用進行操作，至於操作可以到什麼程度並沒有說明，Demo 主要都是針對獲取資料的部分，例如取得文件作者、時間、權限資料，拿資料還做視覺化處理或是產報表等等。 Microsoft AzureCortana and other tools 一開始稍微帶過 Cortana 以及背後的 Machine Learning，展示了一些和 Machine Learning 相關的工具以及 API，現場展示的有臉部辨識的應用，例如從相片或即時影像中找出人臉，並辨識年齡 / 性別 / 情緒等等，準確度滿高的，這些都有 API 可以使用，詳情可參考官網。 Microsoft Azure VM/Database/DataWarehouse/DataLake and Power BI 感覺得出微軟非常想推 Azure 和 Power BI，光是 Demo 如何在 Azure 上建 Data Lake 和用 Power BI 取出資料分析並建立報表就花了不少時間 (跟其他比起來)，中間一度花很多時間在看講者操作 Power BI 拖拉產生各種報表展示有多方便、強大、產出來的圖片有多漂亮。 Microsoft Azure Machine Learning 展示如何使用拖拉功能就能設計好演算法，甚至有不少經典的模型已經在裡面讓你直接套用，你要做的就是依你的需求做調整，並餵 training data 和 testing data 進去，model 完成之後，未來想使用就直接 call 這個 model 的 API 就行了。當然，提供許多 module，擁有彈性和易於開發，更可以跟 Office Add-ins 做結合。 大致上是這樣，當然實際上會有更細的解說、更多的展示和功能操作。 聽其他與會者有在 murmur 這些東西去年就講過了。","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Misc","slug":"Technique/Misc","permalink":"http://blog.marksylee.com/categories/Technique/Misc/"}],"tags":[{"name":"conf.","slug":"conf","permalink":"http://blog.marksylee.com/tags/conf/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Misc","slug":"Technique/Misc","permalink":"http://blog.marksylee.com/categories/Technique/Misc/"}]},{"title":"IE 列印異常","slug":"ie-print-error","date":"2016-06-24T09:40:39.000Z","updated":"2020-05-31T05:49:48.144Z","comments":true,"path":"2016/06/24/ie-print-error/","link":"","permalink":"http://blog.marksylee.com/2016/06/24/ie-print-error/","excerpt":"最近接到個比較陌生的問題，客戶想要直接透過瀏覽器的列印功能，去印下系統頁面，當內容頁數超過一頁以上時，在IE的預覽列印只能顯示第一頁(當然也只會印第一頁)，而其他瀏覽器則沒有這個問題。","text":"最近接到個比較陌生的問題，客戶想要直接透過瀏覽器的列印功能，去印下系統頁面，當內容頁數超過一頁以上時，在 IE 的預覽列印只能顯示第一頁(當然也只會印第一頁)，而其他瀏覽器則沒有這個問題。 問題 使用 IE 打開網頁時，若是網頁內容超過一頁以上，使用 IE 的列印功能，只能夠印出或預覽列印第一頁。 參考資料 如果內容長度超出一個頁面的標籤，其 style 有 position: absolute 時，就會出現這個狀況，所以可以算是 IE 對於 CSS 上面的 bug。 來源：Internet Explorer sometimes only prints the first page 解決方法 我的做法是用其他 position 取代 absolute，但是記得要 check 一下版型有沒有跑掉。 原為12345678910&lt;style&gt;#content &#123; position: absolute; /* 其他 css */&#125;&lt;/style&gt; &lt;div id=\"content\"&gt; 一狗票好幾頁的內容&lt;/div&gt; 改為12345678910&lt;style&gt;#content &#123; position: relative; /* 其他 css */&#125;&lt;/style&gt;&lt;div id=\"content\"&gt; 一狗票好幾頁的內容&lt;/div&gt;","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"HTML","slug":"Technique/HTML","permalink":"http://blog.marksylee.com/categories/Technique/HTML/"}],"tags":[{"name":"ie","slug":"ie","permalink":"http://blog.marksylee.com/tags/ie/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"HTML","slug":"Technique/HTML","permalink":"http://blog.marksylee.com/categories/Technique/HTML/"}]},{"title":"Pidgin Plugin For Line","slug":"pidgin-plugin-for-line","date":"2016-06-24T09:23:03.000Z","updated":"2020-05-31T05:49:48.159Z","comments":true,"path":"2016/06/24/pidgin-plugin-for-line/","link":"","permalink":"http://blog.marksylee.com/2016/06/24/pidgin-plugin-for-line/","excerpt":"Pidgin是一套通訊軟體，整合了Facebook、Google Talk、IRC、Line等多達20種的即時通訊。可惜的是，Pidgin預設並未提供Line登入，好在神人很多，已經有人開發Line的plugin，但是只有Source Code，所以想裝就得自己編譯！","text":"Pidgin 是一套通訊軟體，整合了 Facebook、Google Talk、IRC、Line 等多達 20 種的即時通訊。可惜的是，Pidgin 預設並未提供 Line 登入，好在神人很多，已經有人開發 Line 的 plugin，但是只有 Source Code，所以想裝就得自己編譯！ 使用 root 身分 1sudo su 安裝必要軟體 123apt-get update apt-get install -y pidgin git build-essentialapt-get install -y libpurple-dev libboost-dev libboost-test-dev libboost-program-options-dev libevent-dev automake libtool flex bison pkg-config g++ libssl-dev libgcrypt11-dev 安裝 Apache thirft123456789101112131415cd /tmpmkdir purplelinecd purplelinegit clone https://github.com/apache/thrift thriftcd thriftgit checkout 0.9.2./bootstrap.sh./configuremakemake installcd /usr/local/libmkdir thriftmv libthrift* thriftln -s /usr/local/lib/thrift/libthrift-0.9.2.so /usr/lib/libthrift.socd /tmp/purpleline 安裝 purple_line 12345678git clone http://altrepo.eu/git/purple-line.git/ purple-line git clone http://altrepo.eu/git/line-protocol.git/ line-protocol cp line-protocol/line_main.thrift purple-line/ cp line-protocol/line.thrift purple-line/ cd purple-line makemake installldconfig 重新登入後即可使用！","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Linux","slug":"Technique/Linux","permalink":"http://blog.marksylee.com/categories/Technique/Linux/"}],"tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"http://blog.marksylee.com/tags/ubuntu/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Linux","slug":"Technique/Linux","permalink":"http://blog.marksylee.com/categories/Technique/Linux/"}]},{"title":"筆記型電腦 Windows Ubuntu 雙系統","slug":"windows-ubuntu-dual-boot","date":"2016-06-24T09:13:59.000Z","updated":"2020-05-31T05:49:48.181Z","comments":true,"path":"2016/06/24/windows-ubuntu-dual-boot/","link":"","permalink":"http://blog.marksylee.com/2016/06/24/windows-ubuntu-dual-boot/","excerpt":"明很簡單的東西，我硬要給人繞一大圈，真夠蠢的…","text":"明很簡單的東西，我硬要給人繞一大圈，真夠蠢的… 這是昨晚的流程Windows Reset → D 槽切一半 → 裝 Ubuntu → 裝 Grub 2 開機選單 → 但是選單的第一項是 Ubuntu，想改為 Windows → 修改 BIOS 的 boot option → 發現 boot option #1 如果是 Windows Boot Maganer 就不會跳出選單會直接進 Windows → 把 boot option #1 設為 Linux → 進 Ubuntu 用 boot-repair 重建 Grub 選單 → Windows 的 MBR (在 C 槽) 和 Ubuntu (在 D 槽) 合併，並存到 D 槽 → boot option #1 改回 Windows Boot Manager 依舊無法解決系統直接進入 Windows 問題，而且產生很多詭異的檔案 → 砍掉 boot-repair 以及產生的檔案 → 無法解決 → re-intall Ubuntu → 乾淨的 Ubuntu → boot option #1 設為 Linux → 開機選單 Windows 8.1 不見了 → Grub 重新設定並更新開機選單 → 選單出現 Windows → 進不去 → format Ubuntu → 電腦找不到任何 OS，直接進空蕩蕩的 grub command line → Windows 8 沒有 Recovery CD or Repair Disc → 使用 Ubuntu Live CD 找 tool 救回跟著 Ubuntu 一起被 format 的 MBR → 失敗 → 找另一台電腦燒修復磁碟 → 用修復磁碟 Reset Windows → 重開機仍舊直接進 grub command line → 使用修復磁碟進入 CMD rebuild MBR → 重開機仍舊直接進 grub command line → 進 BIOS 把開機選項第一個改為 Windows Boot Manager → Windows 啟動成功 → 進入乾淨的 Windows → 天亮了 發生什麼事？ Windows Boot Manager 是 Windows 自帶的開機選單，有時候開機可以選安全模式或是其他版本的 Windows，那就是 Windows Boot Manager，如果 boot option #1 設定 Windows Boot Manager，他就會先去讀這套選單系統，因為 Ubuntu 是後裝的，所以 Windows Boot Manager 根本不知道有 Ubuntu (Windows 對其他 OS 不太友善，就算是先裝 Ubuntu 再裝 Windows，一樣會產生很多問題)，導致不會有選單就直接進去 Windows。 BIOS 的 Boot Option #1 如果設定 Linux，就會使用 Grub 或 Syslinux 開機選單系統，因為這套選單系統是安裝 Ubuntu 時裝的，所以他知道此電腦內有 Windows，自然就可以挑選 Windows or Ubuntu 登入。 想要控制選單的內容並不是去修改 boot option，那是讓你挑要用哪一套開機選單，如果想要改 Grub 選單的選項順序、等待時間或是預設選項，要去修改 Grub 的 config 檔。 為什麼 Windows 回復原廠狀態及 rebuild MBR 都失敗？因為 boot option #1 是 Linux，他跑去讀 Grub 當然空空如也 (因為 re-intall + format Ubuntu 導致 Grub 已經不知道變什麼鬼樣子)，當時如果把 boot option #1 改成 Windows Boot Manager 應該可以成功。 結論 切割磁區 → 光碟開機 → 安裝 Ubuntu → 進 BIOS 把 Boot Option #1 改成 Linux → 進 Ubuntu 調整 /boot/grub/grub.cfg 內的 OS 順序 → 結束 如果做這種系統面的大變動，一定要先備份、建立還原點或是產生修復磁碟，可以省下非常多的時間，建立修復磁碟 (Windows Repair Media) 的功能躲在 控制台 &gt; 系統及安全性 &gt; 重要訊息中心 &gt; 復原 &gt; 建立修復磁碟機","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Linux","slug":"Technique/Linux","permalink":"http://blog.marksylee.com/categories/Technique/Linux/"}],"tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"http://blog.marksylee.com/tags/ubuntu/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Linux","slug":"Technique/Linux","permalink":"http://blog.marksylee.com/categories/Technique/Linux/"}]},{"title":"CentOS 7 架設 Transmission","slug":"transmission-on-centos7","date":"2016-06-24T07:12:07.000Z","updated":"2020-05-31T05:49:48.178Z","comments":true,"path":"2016/06/24/transmission-on-centos7/","link":"","permalink":"http://blog.marksylee.com/2016/06/24/transmission-on-centos7/","excerpt":"希望能夠在任意地點經由網頁上傳torrent，Server會自動下載檔案。","text":"希望能夠在任意地點經由網頁上傳 torrent，Server 會自動下載檔案。 安裝 Transmission1yum install transmission transmission-daemon 啟動再關閉，系統會自行產生設定檔12systemctl start transmission-daemonsystemctl stop transmission-daemon 設為開機即啟動1systemctl enable transmission-daemon 修改設定檔1vi /var/lib/transmission/.config/transmission-daemon/settings.json 設定檔內修改登入資訊123\"rpc-authentication-required\": true,\"rpc-password\": \"密碼\",\"rpc-username\": \"帳號\", 使用 Apache Proxy 導向 Transmission 所在的 port(可參考Apache mod_proxy)。 修改 Apache 設定1vi /etc/httpd/conf/httpd.conf 在 port 80 的 VirtualHost 內加入以下內容123RewriteRule /transmission[/]?$ /transmission/web [R=permanent]ProxyPass /transmission http://localhost:9091/transmissionProxyPassReverse /transmission http://localhost:9091/transmission 重啟服務12systemctl start transmission-daemonsystemctl start httpd.service 連線至 http://localhost/transmission 即可登入使用。","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Linux","slug":"Technique/Linux","permalink":"http://blog.marksylee.com/categories/Technique/Linux/"}],"tags":[{"name":"centos","slug":"centos","permalink":"http://blog.marksylee.com/tags/centos/"},{"name":"transmission","slug":"transmission","permalink":"http://blog.marksylee.com/tags/transmission/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Linux","slug":"Technique/Linux","permalink":"http://blog.marksylee.com/categories/Technique/Linux/"}]},{"title":"Apache mod_proxy (Forward/Reverse)","slug":"apache-proxy-forward-reverse","date":"2016-06-24T03:43:11.000Z","updated":"2020-05-31T05:49:48.135Z","comments":true,"path":"2016/06/24/apache-proxy-forward-reverse/","link":"","permalink":"http://blog.marksylee.com/2016/06/24/apache-proxy-forward-reverse/","excerpt":"為了物盡其用，我們總是在一台機器上架設很多網路服務，而這些服務通常都四散在各個Port上，例如在 80上有Apache HTTPd、Tomcat占用著8080、RStudio Server又裝在8787上，用起來十分不方便。","text":"為了物盡其用，我們總是在一台機器上架設很多網路服務，而這些服務通常都四散在各個 Port 上，例如在 80 上有 Apache HTTPd、Tomcat 占用著 8080、RStudio Server 又裝在 8787 上，用起來十分不方便。 問題 如何將不同 Port 上的服務整合到同一個 Port 上？ 舉例來說，我在 CentOS 7 上安裝了一套 RStudio Server，這是一款網頁式的 R 語言 IDE，該服務預設的 Port 是 8787，而我的 Port 80 上也已經在跑 WordPress 等服務，但是我希望能夠在不改 Port 的情況下用 URL 來區別兩個服務，像是用 http://marksylee.com/rstudio 可以連到 RStuidio Server，而不會影響到本來就正常運行的http://marksylee.com/wordpress。 基礎知識 容我發懶一下，TonyQ 大大已經很好心地把文件翻譯出來，請看[心得] apache mod_proxy 介紹。 解決方法 基本上，CentOS 7 的 Apache 已經內建安裝了 mod_proxy，可以在 /etc/httpd/conf/httpd.conf 或/etc/httpd/conf.modules.d/ 內找到，如果沒有，那可能需要安裝或啟用，請自行估狗。 首先，執行以下指令找找看是否有 &lt;IfModule mod_proxy.c&gt; 的標籤，如果有，請把標籤的內容反註解掉。 1vi /etc/httpd/conf/httpd.conf 如果沒有相關的內容，請在文件結尾加入以下內容： 123456789101112131415&lt;IfModule mod_proxy.c&gt; &lt;VirtualHost *:80&gt; &lt;Proxy *&gt; Allow from localhost &lt;/Proxy&gt; ProxyPass /rstudio/ http://localhost:8787/ ProxyPassReverse /rstudio/ http://localhost:8787/ RedirectMatch permanent ^/rstudio$ /rstudio/ &lt;/VirtualHost&gt; &lt;/IfModule&gt; 完成後重啟 Apache1systemctl restart httpd.service 然後連進網址 http://ip-address/rstudio 看看有沒有通，如果出現 503 Error (Service Unavailable) 請不要驚慌，可能是 SELinux 在搞鬼，可參考Apache ProxyPass 出现 503 Service Temporarily Unavailable 的解决方案。","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Linux","slug":"Technique/Linux","permalink":"http://blog.marksylee.com/categories/Technique/Linux/"}],"tags":[{"name":"apache","slug":"apache","permalink":"http://blog.marksylee.com/tags/apache/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Linux","slug":"Technique/Linux","permalink":"http://blog.marksylee.com/categories/Technique/Linux/"}]},{"title":"約翰霍普金斯大學 – 數據科學","slug":"john-hopkins-data-science","date":"2016-06-24T03:25:56.000Z","updated":"2020-05-31T05:49:48.147Z","comments":true,"path":"2016/06/24/john-hopkins-data-science/","link":"","permalink":"http://blog.marksylee.com/2016/06/24/john-hopkins-data-science/","excerpt":"這是 Coursera 的專項課程，也就是說，它是由一系列的相關課程所組成，循序漸進地討論資料科學的概論、程式設計、統計、實用等面向，非常適合對資料科學/分析/探勘有興趣的人學習，重點是一切免費(付費可取得證書及其他優惠)，美中不足的是後面難度較高的課程還沒有中文翻譯字幕。","text":"這是 Coursera 的專項課程，也就是說，它是由一系列的相關課程所組成，循序漸進地討論資料科學的概論、程式設計、統計、實用等面向，非常適合對資料科學 / 分析 / 探勘有興趣的人學習，重點是一切免費 (付費可取得證書及其他優惠)，美中不足的是後面難度較高的課程還沒有中文翻譯字幕。 以下是課程資訊 Johns Hopkins University - Data Science Brian Caffo, Jeff Leek, Roger D. Peng The Data Scientist’s Toolbox (中) - 系列課程導論與工具介紹 R Programming (中) - R 程式設計 Getting and Cleaning Data！ (中) - 獲取與清理資料 Exploratory Data Analysis (中) - 探索性資料分析 Reproducible Research (英) - 可重覆性資料分析 Statistical Inference (英) - 統計推論 Regression Models (英) - 回歸模型 Practical Machine Learning (英) - 實用機器學習 Developing Data Products (英) - 資料產品開發","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"R","slug":"Technique/R","permalink":"http://blog.marksylee.com/categories/Technique/R/"}],"tags":[{"name":"data science","slug":"data-science","permalink":"http://blog.marksylee.com/tags/data-science/"},{"name":"moocs","slug":"moocs","permalink":"http://blog.marksylee.com/tags/moocs/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"R","slug":"Technique/R","permalink":"http://blog.marksylee.com/categories/Technique/R/"}]},{"title":"CentOS 7 架設 WordPress","slug":"wordpress-on-centos7","date":"2016-06-23T09:04:17.000Z","updated":"2020-05-31T05:49:48.183Z","comments":true,"path":"2016/06/23/wordpress-on-centos7/","link":"","permalink":"http://blog.marksylee.com/2016/06/23/wordpress-on-centos7/","excerpt":"網上已有非常豐富的WordPress架設教學，本篇稍微不同的是用MariaDB取代原先的MySQL。","text":"網上已有非常豐富的 WordPress 架設教學，本篇稍微不同的是用 MariaDB 取代原先的 MySQL。 MariaDB安裝 MariaDB1yum -y install mariadb-server mariadb 開啟 MariaDB 且設定開機啟動12systemctl start mariadb.servicesystemctl enable mariadb.service MariaDB 基本設定1mysql_secure_installation 登入 MariaDB1mysql -u root -p 建立 wp 資料庫1CREATE DATABASE wp; 建立使用者 wpuser1CREATE USER wpuser@localhost; 設定密碼1SET PASSWORD FOR wpuser@localhost= PASSWORD('密碼'); wpuser 具有 wp 資料庫的完整權限1GRANT ALL PRIVILEGES ON wp.* TO wpuser@localhost IDENTIFIED BY 'password'; Apache HTTPd安裝 Apache HTTPd1yum -y install httpd 開啟 Apache 且設為開機啟動12systemctl start httpd.servicesystemctl enable httpd.service 防火牆打開 http 和 https 的 port123firewall-cmd --permanent --zone=public --add-service=httpfirewall-cmd --permanent --zone=public --add-service=httpsfirewall-cmd --reload 此時可以試試看http://ip，看到 Apache 預設畫面表示成功。 PHP安裝 PHP1yum -y install php 重啟 Apache1systemctl restart httpd.service 寫一支 info 來看看 PHP 的狀況1vi /var/www/html/info.php 檔案內容如下123&lt;?phpphpinfo();?&gt; 試試看http://ip/info.php，看到畫面表示成功，從頁面上可以看到，並未安裝 MySQL 模組。 安裝 php 的 mysql 模組(mysql 模組跟 mariadb 相容)1yum -y install php-mysql 重啟 Apache1systemctl restart httpd.service phpMyAdmin安裝1yum install phpMyAdmin 編輯 phpMyAdmin 設定1vi /etc/httpd/conf.d/phpMyAdmin.conf 把設定改成以下1234567891011121314151617181920212223242526272829[...]Alias /phpMyAdmin /usr/share/phpMyAdminAlias /phpmyadmin /usr/share/phpMyAdmin #&lt;Directory /usr/share/phpMyAdmin/&gt;# &lt;IfModule mod_authz_core.c&gt;# # Apache 2.4# &lt;RequireAny&gt;# Require ip 127.0.0.1# Require ip ::1# &lt;/RequireAny&gt;# &lt;/IfModule&gt;# &lt;IfModule !mod_authz_core.c&gt;# # Apache 2.2# Order Deny,Allow# Deny from All# Allow from 127.0.0.1# Allow from ::1# &lt;/IfModule&gt;#&lt;/Directory&gt; &lt;Directory /usr/share/phpMyAdmin/&gt; Options none AllowOverride Limit Require all granted&lt;/Directory&gt; [...] 修改 phpMyAdmin 認證方式1vi /etc/phpMyAdmin/config.inc.php 將原本的 $cfg[&#39;Servers&#39;][$i][&#39;auth_type&#39;]=&#39;cookie&#39;; 改成$cfg[&#39;Servers&#39;][$i][&#39;auth_type&#39;]=&#39;http&#39;;。 重啟 Apache1systemctl restart httpd.service 進入 http://ip/phpmyadmin 輸入帳號密碼，看到畫面表示成功，進入 wp 資料庫，把編碼改為utf8_unicode_ci。 WordPress下載及安裝123cd /var/www/htmlwget https://tw.wordpress.org/wordpress-4.5.2-zh_TW.tar.gztar -xzvf wordpress-4.5.2-zh_TW.tar.gz 設定擁有者與權限並重啟 Apache123chown -R apache:apache /var/www/html/WordPresschmod -R 755 /var/www/html/WordPresssystemctl restart httpd.service 試試看 http://ip/WordPress 能否連入，如果可以就能開始設定你的 WordPress 了！ 如果無法從網站寫入 wp_config.php，可以手動寫入123cd /var/www/html/WordPress/cp wp-config-sample.php wp-config.phpvi wp-config.php 設定如下123456789// ** MySQL settings - You can get this info from your web host ** ///** The name of the database for WordPress */define('DB_NAME', '資料庫名稱'); // wp /** MySQL database username */define('DB_USER', '資料庫登入帳號'); // wpuser /** MySQL database password */define('DB_PASSWORD', '資料庫登入密碼'); // 密碼 WordPress 安裝完後，可以將 phpMyAdmin.conf 改回預設值，這樣非本機就不能登入 phpMyAdmin，以提升安全性。 將 WordPress 資料夾給 Apache，並賦予權限123chrown apache:apache /your/WordPress/folder/find /your/WordPress/folder/ -type d -exec chmod 755 &#123;&#125;find /your/WordPress/folder/ -type f -exec chmod 644 &#123;&#125; 若發生not found 404，可參考Where to set AllowOverride All for .htacess?，應該是 Apache 沒有打開 override 功能。 其他安全相關設定，可參考 9 個提升 WordPress 網站安全性的方法 跟11 個強化 WordPress 網站安全的 .Htaccess 設定技巧。","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Linux","slug":"Technique/Linux","permalink":"http://blog.marksylee.com/categories/Technique/Linux/"}],"tags":[{"name":"centos","slug":"centos","permalink":"http://blog.marksylee.com/tags/centos/"},{"name":"wordpress","slug":"wordpress","permalink":"http://blog.marksylee.com/tags/wordpress/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Linux","slug":"Technique/Linux","permalink":"http://blog.marksylee.com/categories/Technique/Linux/"}]},{"title":"CentOS 7 初始化設定","slug":"centos7-init-conf","date":"2016-06-23T04:24:52.000Z","updated":"2020-05-31T05:49:48.137Z","comments":true,"path":"2016/06/23/centos7-init-conf/","link":"","permalink":"http://blog.marksylee.com/2016/06/23/centos7-init-conf/","excerpt":"CentOS 7安裝方式很簡單，所以就不再贅述，如果想要教學指南可參考CentOS 7安裝，本篇只介紹安裝完後設定的指令。","text":"CentOS 7 安裝方式很簡單，所以就不再贅述，如果想要教學指南可參考CentOS 7 安裝，本篇只介紹安裝完後設定的指令。 帳號及密碼 變更 root 密碼：如果你在圖形化介面安裝時 CentOS 時已經有設定 root 密碼，其實可以跳過這個步驟，但是如果你的 root 密碼是使用預設，請務必、一定要在登入的第一時間修改密碼。 修改 root 密碼1passwd 新增使用者帳號：因為安全性考量，在玩弄 CentOS 時非常不建議使用 root 帳號，非常容易出人命，所以新建一個帳號來玩耍，如果有需要 root 權限，再使用 sudo 就好了。 新增使用者(user01)1adduser user01 設定密碼1passwd user01 安裝及設定套件 檢查 yum 是否安裝yum 套件非常強大，專司 package 的安裝、更新、移除等工作。 檢查 yum 是否已安裝1rpm -qa | grep yum 如果有類似以下的內容表示已有安裝 yum1234yum-metadata-parser-1.1.4-10.el7.x86_64yum-cron-3.4.3-118.el7.centos.noarchyum-3.4.3-118.el7.centos.noarchyum-plugin-fastestmirror-1.1.31-25.el7_0.noarch 安裝 sudo權限管理套件，能暫時得到 root 權限。 檢查是否已安裝1yum list installed | grep sudo 安裝 sudo1yum install sudo 修改 sudo 設定1vi /etc/sudoers 在 root ALL=(ALL) ALL 下面複製一樣的內容，並把 root 改為帳號，例如 1user01 ALL=(ALL) ALL 或是希望使用 sudo 時免輸入密碼 1user01 ALL=(ALL) NOPASSWD:ALL 以下所有動作都應該使用 sudo 或是先切換成 root 身分操作喔！ 禁止 root 使用 ssh 登入 避免有心人士得到 root 密碼後進去搞破壞，所以乾脆不要打開 root 的 ssh。 修改 ssh 設定1vi /etc/ssh/sshd_config 找到 #PermitRootLogin yes 取消註解，並把 yes 改為no。 變更 ssh portssh 的 port 預設為22，很常成為攻擊的目標，避免不必要的麻煩可以把它改掉。 修改 ssh 設定1vi /etc/ssh/sshd_config 找到 #Port 22 取消註解並改成你想要的阜號 (1024 – 65535，為避免衝突請先參考 這裡) 重啟 ssh1service sshd restart 安裝及設定 firewalldfirewalld 是 CentOS 7 預設的防火牆使用者介面，安裝後可以查看防火牆狀態，雖然介面是 firewalld，底層仍然是 iptables。 使用 yum 來安裝1yum install firewalld 修改設定1vi /etc/firewalld/services/ssh.xml 讓新的 ssh port 可以通過防火牆，把原本的 port=&quot;22″ 改為你設定的阜號 重載1firewall-cmd --reload 安裝及設定 fail2ban有些無聊人士會使用暴力破解法去猜登入密碼，為了避免這種問題，所以使用 fail2ban 來讓短時間登入失敗次數過多的 ip 被封鎖。 用 yum 安裝套件1yum install fail2ban 如果失敗，可能因為套件不在套件褲內，先執行以下指令，再用 yum 安裝1rpm -Uvh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm 修改 log 設定1vi /etc/fail2ban/fail2ban.conf 把 #logtarget = SYSLOG 取消註解並更改路徑為/var/log/fail2ban.log 設定封鎖規則12cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.localvi /etc/fail2ban/jail.local 找到[sshd]，在他前面新增規則如下 登入失敗連續 3+1 次，封鎖 43200 秒123456[ssh-iptables]enabled = truefilter = sshdlogpath = /var/log/securemaxretry = 3bantime = 43200 在任何提示模式自動啟動服務1chkconfig fail2ban on 啟動服務1service fail2ban start 如果沒有作用請執行1systemctl restart fail2ban.service 檢查 ssh 的封鎖狀態1fail2ban-client status sshd 誤鎖救援方式 查看規則，應該可以找到名為 f2b-ssh-iptables 的 chain1iptables -L 查看被 f2b-ssh-iptables 規則所封鎖的 IP1iptables f2b-ssh-iptables -L 解除封鎖，結尾的 N 表示第幾個 IP1iptables -D f2b-ssh-iptables N","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Linux","slug":"Technique/Linux","permalink":"http://blog.marksylee.com/categories/Technique/Linux/"}],"tags":[{"name":"centos","slug":"centos","permalink":"http://blog.marksylee.com/tags/centos/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Linux","slug":"Technique/Linux","permalink":"http://blog.marksylee.com/categories/Technique/Linux/"}]},{"title":"ADSL 固定 IP 及數據機硬體撥接","slug":"static-ip-modem-pppoe","date":"2016-06-23T03:52:48.000Z","updated":"2020-05-31T05:49:48.168Z","comments":true,"path":"2016/06/23/static-ip-modem-pppoe/","link":"","permalink":"http://blog.marksylee.com/2016/06/23/static-ip-modem-pppoe/","excerpt":"現在ISP(網路服務供應商)基本上都能夠申請固定IP，以Hinet ADSL為例，通常一組ADSL帳號同時可以使用8個浮動IP或是一個固定IP加上七個浮動IP，也就是說，可以有八台電腦使用同一個帳號，各自使用PPPoE撥號連線上網路。","text":"現在 ISP(網路服務供應商)基本上都能夠申請固定 IP，以 Hinet ADSL 為例，通常一組 ADSL 帳號同時可以使用 8 個浮動 IP 或是一個固定 IP 加上七個浮動 IP，也就是說，可以有八台電腦使用同一個帳號，各自使用 PPPoE 撥號連線上網路。 向 ISP 申請固定 IP中華電信有提供這個服務，詳情請去 申請固定 IP 配發服務 填寫資料，系統馬上就會給你一組固定 IP，但要注意，這組 IP 有可能因為維修或其他原因暫時停止或變換，他都會用 email 通知。 由數據機使用固定 IP 自動連線 首先把電腦設定改成： IP - 192.168.1.2 子網路遮罩 - 255.255.255.0 預設閘道 - 192.168.1.1 慣用 DNS 伺服器位址 - 192.168.1.1 (或 google 的8.8.8.8) 將電腦接上數據機，在瀏覽器打入192.168.1.1，會彈出帳號密碼視窗，輸入後即可進入 D-link 畫面。 光世代數據機：帳號 cht 密碼chtnvdsl(北區)、chtcvdsl(中區)、chtsvdsl(南區) ADSL 數據機：帳號 cht 密碼chtnadsl(北區)、chtcadsl(中區)、chtsadsl(南區) 上方選單點選 Setup→WAN Setup→Add→PPPoE，下方輸入上網的帳號密碼(Hinet 給的帳號卡)，要特別注意的是，如果你想使用浮動 IP 連線的話，直接照著卡上輸入即可，但是，如果你想使用剛剛申請的固定 IP 來連線，就需要把後方的hinet.net 改成ip.hinet.net。 其他設定 進入 LAN Setup 啟用 DHCP，建議Start IP Address 要預留幾個，例如設定從 192.168.1.100 開始。 WHY？例如你目前使用的這台電腦，IP 已經設定為 192.168.1.2，其實就可以放著不用再改回自動取得，這樣以後這台電腦在區網的 IP 就是這個，在區網內的其他電腦想遠端這台電腦也不用每次都去查 IP。但是啟用 DHCP 的話，數據機會自動給那些沒有設定的電腦一組 IP，你如果沒有把 192.168.1.2 先預留下來，可能就會被衝到。 如果有 WiFi AP 還要再進入你 WiFi AP 的設定畫面，選擇 Setup→WAN Setup，把原本用 PPPoE 連線改成固定 IP(Static IP) 連線，否則 WiFi AP 會再撥號一次，那就不會在同一個區域內了。","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Misc","slug":"Technique/Misc","permalink":"http://blog.marksylee.com/categories/Technique/Misc/"}],"tags":[{"name":"adsl","slug":"adsl","permalink":"http://blog.marksylee.com/tags/adsl/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Misc","slug":"Technique/Misc","permalink":"http://blog.marksylee.com/categories/Technique/Misc/"}]},{"title":"R 語言學習資源","slug":"r-lang","date":"2016-06-22T09:48:34.000Z","updated":"2020-05-31T05:49:48.159Z","comments":true,"path":"2016/06/22/r-lang/","link":"","permalink":"http://blog.marksylee.com/2016/06/22/r-lang/","excerpt":"","text":"PTT 置底 PTT - R 的中文書R for beginnerR 導論中文指南R 統計軟體：簡介與基本操作R 統計軟體 機率與統計 (使用 R 軟體) 常用的 R 程式語言 台大教學影片 TW-Use-R 教學影片R 統計軟體安裝與使用投影片R 和 Shiny 製作網頁應用Kaggle - Facial Keypoints Detection 有趣的 BlogRSeek - search engineR-Bloggers","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"R","slug":"Technique/R","permalink":"http://blog.marksylee.com/categories/Technique/R/"}],"tags":[{"name":"resource","slug":"resource","permalink":"http://blog.marksylee.com/tags/resource/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"R","slug":"Technique/R","permalink":"http://blog.marksylee.com/categories/Technique/R/"}]},{"title":"Tika PDFBox 讀取繁體中文編碼錯誤","slug":"tika-pdfbox-cht-error","date":"2016-06-22T09:22:09.000Z","updated":"2020-05-31T05:49:48.174Z","comments":true,"path":"2016/06/22/tika-pdfbox-cht-error/","link":"","permalink":"http://blog.marksylee.com/2016/06/22/tika-pdfbox-cht-error/","excerpt":"最近遇到個詭異的問題，就是當Tika去解析PDF文件時，如果文件有使用特定編碼(ETenms-B5)，就會解析出亂碼，Tika解析PDF的部分是使用PDFBox，而我遇到的問題也正好是存在已久的PDFBox bug。","text":"最近遇到個詭異的問題，就是當 Tika 去解析 PDF 文件時，如果文件有使用特定編碼(ETenms-B5)，就會解析出亂碼，Tika 解析 PDF 的部分是使用 PDFBox，而我遇到的問題也正好是存在已久的 PDFBox bug。 問題PDFBox 在解析檔案時，若該 PDF 含有 ETenms-B5-H 編碼，則會解析出亂碼。 基礎知識PDF 的預設字集是 Adobe 公司自行編碼的CID 字集，不是大家通用的萬國碼 Unicode，所以在讀取內容時，會先透過一個叫做 CMap 的檔案，對映到 CID 字集，以便在顯示的時取得正確的字形。 舉例來說，ETenms-B5-H 的 CMap，裡面描述的是怎麼把 ETenms-B5-H 的編碼對應到 CID 編碼，這樣 PDF 檔案如果包含 ETenms-B5-H 的編碼，開啟檔案時就會透過 CMap 得到 CID 編碼並秀出正確的字。 ETenms-B5-H、ETenms-B5-V 是倚天輸入法以 BIG5 為基礎發展的擴充集(V 為垂直書寫、H 為水平)，基本上使用細明體、新細明體、標楷體等都有可能會用到它，所以要多注意，這個編碼方式是繁體中文專用，所以基本上只有台灣等地會用到。 解決方法 我將 PDFBox 的 jar 檔解壓縮後，檢查裡面的 CMap，發現 PDFBox 內確實有 ETenms-B5-H 的 CMap 對應檔(否則執行過程中會報錯)，但是內容殘缺不全，所以我就拿在同位址下另一個倚天的編碼 ETen-B5-H 內容複製過去把內文中的 ETen-B5-H 改成 ETenms-B5-H，重新封裝 jar 檔，就能夠順利解析了。 註：ETen-B5-H 和 ETenms-B5-H 一樣，但 ETenms-B5-H 將半寬的拉丁字符替換成比例字符。","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Java","slug":"Technique/Java","permalink":"http://blog.marksylee.com/categories/Technique/Java/"}],"tags":[{"name":"apache","slug":"apache","permalink":"http://blog.marksylee.com/tags/apache/"},{"name":"library","slug":"library","permalink":"http://blog.marksylee.com/tags/library/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Java","slug":"Technique/Java","permalink":"http://blog.marksylee.com/categories/Technique/Java/"}]},{"title":"限制 SQL 的查詢資料筆數","slug":"sql-select-limit","date":"2016-06-22T07:51:55.000Z","updated":"2020-05-31T05:49:48.164Z","comments":true,"path":"2016/06/22/sql-select-limit/","link":"","permalink":"http://blog.marksylee.com/2016/06/22/sql-select-limit/","excerpt":"常常在SELECT資料庫時，因為資料量龐大或是某些特殊原因，只想查詢特定筆數的資料，但因為各家資料庫的語法不盡相同，避免每次都要重新查詢一次，所以就整理起來。","text":"常常在 SELECT 資料庫時，因為資料量龐大或是某些特殊原因，只想查詢特定筆數的資料，但因為各家資料庫的語法不盡相同，避免每次都要重新查詢一次，所以就整理起來。 Oracle關鍵字 ROWNUM，放在WHERE 後方即可，範例語法如下： 上述語法的作用是查詢前 3 筆資料1SELECT * FROM TABLE_NAME WHERE ROWNUM &lt;= 3; 需特別注意的地方有： ROWNUM會比 ORDER BY, GROUP BY 還要早執行，所以如果有使用這兩個子句的話，會發現顯示結果可能跟預期不同，建議用子查詢先包起來做 ORDER BY, GROUP BY 後再使用。 ROWNUM就像一個序列，把資料一筆一筆放進去，當放進第一筆資料時，其值為 1，並且判斷是否符合條件式。若符合，則留下資料；不符合的話，就將該筆資料刪除，放進下一筆資料，ROWNUM從 1 開始。 用此語法會查無資料，因為永遠不會出現大於 3 的 ROWNUM1SELECT * FROM TABLE_NAME WHERE ROWNUM &gt; 3; 查詢第 3 筆以後的資料123SELECT * FROM(SELECT TABLE_NAME.*, ROWNUM AS NUM FROM TABLE_NAME)WHERE NUM &gt; 3; 取得第 2、3 筆資料123SELECT * FROM(SELECT TABLE_NAME.*, ROWNUM AS NUM FROM TABLE_NAME)WHERE NUM &gt;=2 AND NUM &lt;= 3; MySQL關鍵字LIMIT，可以接受一或兩個參數，範例如下： 查詢前 2 筆資料12SELECT * FROM TABLE_NAME LIMIT 2;SELECT * FROM TABLE_NAME LIMIT 0, 2; 查詢第 2 到第 4 筆資料1SELECT * FROM TABLE_NAME LIMIT 1, 3; SQL Server在 SQL Server 中，查詢前 N 筆資料的語法為TOP，範例如下： 查詢前 3 筆資料1SELECT TOP 3 * FROM TABLE_NAME; 但若要在 SQL Server 中取出第 x 筆到第 y 筆資料，方法就有非常多種： ROW_NUMBER 函式法：此函式會根據參數 OVER 內的 ORDER BY 順序給予資料列序號，再用這些序號當作條件去篩選，只適用於SQL Server 2005 以上版本。 查詢出第 2、3 筆資料1234SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY ID) as ROWNUM FROM TABLE_NAME ) a WHERE ROWNUM &gt;= 2 and ROWNUM &lt;= 3; TOP相減法：將兩個 TOP 查詢結果相減來取得區間資料(TOP 3 - TOP 1 = 第 2、3 筆)。 123SELECT TOP 3 * FROM TABLE_NAMEMINUSSELECT TOP 1 * FROM TABLE_NAME; 大 TOP 包小 TOP 法：先找出 TOP 3 再倒序後找出其TOP 2。 123SELECT TOP 2 * FROM ( SELECT TOP 3 * FROM TABLE_NAME ORDER BY ID) a ORDER BY ID DESC; 使用這類功能時，切記要多注意 ORDER BY 和GROUP BY的使用，這會大大地影響回傳的資料內容。","categories":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Database","slug":"Technique/Database","permalink":"http://blog.marksylee.com/categories/Technique/Database/"}],"tags":[{"name":"sql","slug":"sql","permalink":"http://blog.marksylee.com/tags/sql/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"http://blog.marksylee.com/categories/Technique/"},{"name":"Database","slug":"Technique/Database","permalink":"http://blog.marksylee.com/categories/Technique/Database/"}]}]}